plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.diffplug.spotless' version '5.14.1'
	id "com.github.spotbugs" version "4.7.1"
	id "org.flywaydb.flyway" version "7.11.0"
}

group = 'fhdw'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

compileJava {
	options.compilerArgs += ["-Xlint:all"]
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.+'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.5.+'
	implementation 'org.springframework.security:spring-security-test:5.4.+'
	implementation 'org.springframework.boot:spring-boot-starter-websocket:2.5.+'
	implementation 'io.springfox:springfox-boot-starter:3.0.+'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.+'
	implementation 'io.jsonwebtoken:jjwt:0.9.+'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc:2.5.+'
	implementation 'org.flywaydb:flyway-core:7.11.+'
	testRuntimeOnly 'com.h2database:h2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools:2.5.+'
	runtimeOnly 'org.postgresql:postgresql:42.2.+'
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.+'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.12.+'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest:2.5.+'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.5.+'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas:2.5.+'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.+'
}

test {
	useJUnitPlatform()
}

bootRun {
	systemProperties = System.properties
}

flyway {
	url = (null != System.getenv('SPRING_DATASOURCE_URL')) ? System.getenv('SPRING_DATASOURCE_URL') : "jdbc:postgresql://database:5432/database"
	user = (null != System.getenv('SPRING_DATASOURCE_USERNAME')) ? System.getenv('SPRING_DATASOURCE_USERNAME') : "postgres"
	password = (null != System.getenv('SPRING_DATASOURCE_PASSWORD')) ? System.getenv('SPRING_DATASOURCE_PASSWORD') : "postgres"
}
// we need to build classes before we can migrate
flywayMigrate.dependsOn classes

spotless {
	java {
		importOrder() // standard import order
		removeUnusedImports()
		googleJavaFormat()
	}
}

spotbugs {
	ignoreFailures = false
	showStackTraces = true
	showProgress = true
	effort = "max"
}
